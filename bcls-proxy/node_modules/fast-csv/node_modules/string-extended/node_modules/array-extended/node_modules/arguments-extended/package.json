{
  "name": "arguments-extended",
  "version": "0.0.3",
  "description": "Utilities for working with arguments object",
  "main": "index.js",
  "scripts": {
    "test": "it -r dotmatrix"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:doug-martin/arguments-extended.git"
  },
  "keywords": [
    "arguments",
    "utils",
    "extended",
    "extender",
    "monad",
    "monads"
  ],
  "testling": {
    "files": "test/browserling.js",
    "browsers": [
      "ie/8..latest",
      "chrome/20..latest",
      "firefox/14..latest",
      "safari/latest",
      "iphone/6",
      "ipad/6"
    ]
  },
  "author": {
    "name": "Doug Martin"
  },
  "license": "MIT",
  "dependencies": {
    "extended": "~0.0.3",
    "is-extended": "~0.0.8"
  },
  "devDependencies": {
    "it": "~0.2.0",
    "grunt-it": "~0.3.0",
    "grunt": "~0.4.1",
    "grunt-contrib-uglify": "~0.2.0",
    "grunt-contrib-jshint": "~0.3.0"
  },
  "readme": "[![Build Status](https://travis-ci.org/doug-martin/arguments-extended.png?branch=master)](https://travis-ci.org/doug-martin/arguments-extended)\n\n[![browser support](https://ci.testling.com/doug-martin/arguments-extended.png)](http://ci.testling.com/doug-martin/arguments-extended)\n\n# arguments-extended\n\n`arguments-extended` is a Javascript library that provides utilities for working with the arguments object. `arguments-extended` can be used as a monad library or each function can be used standalone.\n\n`arguments-extended` can be used standalone or incorporated into [`extended`](https://github.com/doug-martin/extended)\n\n```javascript\nvar args = require(\"arguments-extended\");\n```\n\nOr\n\n```javascript\nvar args = require(\"extended\")\n\t.register(require(\"arguments-extended\"));\n```\n\n## Installation\n\n```\nnpm install arguments-extended\n```\n\nOr [download the source](https://raw.github.com/doug-martin/arguments-extended/master/index.js) ([minified](https://raw.github.com/doug-martin/arguments-extended/master/arguments-extended.min.js))\n\n## Usage\n\n**`toArray() argsToArray()`**\n\nFunction to convert arguments to an array. If you are using `arguments-extended` as a monad use the `toArray` method, if your using the standalone method use `argsToArray`\n\nTo use as a monad.\n\n```javascript\n\nfunction argsToArray(){\n    return args(arguments).toArray().value();\n}\n\nargsToArray(\"a\", \"b\", \"c\"); //[\"a\", \"b\", \"c\"];\n\n```\n\nTo use a a function\n\n```javascript\n\nfunction argsToArray(){\n    return args.argsToArray(arguments);\n}\n\nargsToArray(\"a\", \"b\", \"c\"); //[\"a\", \"b\", \"c\"];\n\n```\n\nYou may also specify a `slice` argument to slice a number of arguments off of the front of returned array\n\n\n```javascript\n\nfunction argsToArray(){\n    return args(arguments).toArray(1).value();\n}\n\nargsToArray(\"a\", \"b\", \"c\"); //[\"b\", \"c\"];\n\n```\n\n```javascript\n\nfunction argsToArray(){\n    return args.argsToArray(arguments, 1);\n}\n\nargsToArray(\"a\", \"b\", \"c\"); //[\"b\", \"c\"];\n\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/doug-martin/arguments-extended/issues"
  },
  "_id": "arguments-extended@0.0.3",
  "dist": {
    "shasum": "6107e4917d0eb6f0a4dd66320fc15afc72ef4946",
    "tarball": "http://registry.npmjs.org/arguments-extended/-/arguments-extended-0.0.3.tgz"
  },
  "_from": "arguments-extended@~0.0.3",
  "_npmVersion": "1.2.23",
  "_npmUser": {
    "name": "damartin",
    "email": "doug@dougamartin.com"
  },
  "maintainers": [
    {
      "name": "damartin",
      "email": "doug@dougamartin.com"
    }
  ],
  "directories": {},
  "_shasum": "6107e4917d0eb6f0a4dd66320fc15afc72ef4946",
  "_resolved": "https://registry.npmjs.org/arguments-extended/-/arguments-extended-0.0.3.tgz"
}
